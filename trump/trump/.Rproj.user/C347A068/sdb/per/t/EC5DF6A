{
    "collab_server" : "",
    "contents" : "library(RSentiment)\nlibrary(lubridate)\n\n#tweets = read.csv('all_trump_tweets.csv', stringsAsFactors = F)\n#news = read.csv('uci-news-aggregator.csv', stringsAsFactors = F)\ndjia = read.csv('DJIA.csv', skip = 37, stringsAsFactors = F)\n\n\n#Sentiments\n\n# options(java.parameters = \"-Xmx8000m\")\n# \n# removeURL <- function(x) gsub(\"http[[:alnum:][:punct:]]*\", \"\", x)\n# tweets$text = removeURL(tweets$text)\n# # \n# removeStuff <- function(x) gsub(\"[[:punct:]]\", \" \", x)\n# tweets$text = removeStuff(tweets$text)\n\n#sentiments_trump = calculate_sentiment(tweets$text[1:10000])\n#sentiments_trump2 = calculate_sentiment(tweets$text[10001:20000])\n#sentiments_trump3 = calculate_sentiment(tweets$text[20001:30829])\n\n#sentiments_all = rbind(sentiments_trump,sentiments_trump2,sentiments_trump3)\n#tweets$Sentiment = sentiments_all$sentiment\n\n#write.csv(tweets, 'all_trump_tweets_sentiments.csv')\ntweets = read.csv('all_trump_tweets_sentiments.csv', stringsAsFactors = F)\n\ntweets$created_at = sapply(strsplit(tweets$created_at,\" \"), `[`, 1)\n\n\ntweets$Score = 0\ntweets$Score[tweets$Sentiment == 'Positive'] = 1\ntweets$Score[tweets$Sentiment == 'Very Positive'] = 2\ntweets$Score[tweets$Sentiment == 'Negative'] = -1\ntweets$Score[tweets$Sentiment == 'Very Negative'] = -2\n\ntweets$created_at = as.POSIXct(tweets$created_at, tz = 'EST')\ntweets = tweets[order(tweets$created_at),]\ntweets$Total_sentiment = cumsum(tweets$Score)\n\ndjia$DATE = as.POSIXct(djia$DATE, tz = 'EST')\n\n#library(anytime)\n#options(digits=22)\n\n\n#news$TIMESTAMP = substr(news$TIMESTAMP,1,nchar(news$TIMESTAMP)-3)\n#news$TIMESTAMP = as.numeric(news$TIMESTAMP)\n#news$TIMESTAMP = anytime(news$TIMESTAMP)\n\n\n#all = merge(tweets, djia, by.x = 'created_at', by.y = 'DATE', all.x = TRUE)\nall = merge(tweets, djia, by.x = 'created_at', by.y = 'DATE')\nall$VALUE = as.numeric(all$VALUE)\n\nall$Scaled_sentiment = scale(all$Total_sentiment)[,1]\nall$Scaled_djia = scale(all$VALUE)[,1]\n\nremoveURL <- function(x) gsub(\"http[[:alnum:][:punct:]]*\", \"\", x)\nall$text = removeURL(all$text)\n\nremoveStuff <- function(x) gsub(\"[[:punct:]]\", \" \", x)\nall$text = removeStuff(all$text)\n\n\n#Plots\n\nplot(tweets$created_at, tweets$Total_sentiment)\n\nplot(djia$DATE, djia$VALUE)\n\nplot(all$created_at, all$Scaled_sentiment, ylim = c(-4, 3), type = 'line', lwd = 2)\nlines(all$created_at, all$Scaled_djia, col = 'red', lwd = 2)\n\n\n\nlibrary(plotly)\n\nex = (all$is_retweet == 'TRUE')\nall = all[!ex,]\n\nall$X.1 = NULL\nall$X = NULL\nall$id_str = NULL\nall$in_reply_to_user_id_str = NULL\nall$is_retweet = NULL\nall$source = NULL\nall$Score = NULL\n#all$Scaled_sentiment = NULL\n#all$Scaled_djia = NULL\n\nNth.delete<-function(dataframe, n)dataframe[-(seq(n,to=nrow(dataframe),by=n)),]\nall_small = Nth.delete(all, 2)\n\nall_small = Nth.delete(all_small, 2)\nall_small = Nth.delete(all_small, 2)\nall_small = Nth.delete(all_small, 2)\n\nall_small$retweet_count[all_small$retweet_count == 0] = 1\n\nex = is.na(all_small$VALUE)\nall_small = all_small[!ex,]\n\nall_small = Nth.delete(all_small, 2)\n\n\n#Sys.setenv(\"plotly_username\"=\"robh\")\n#Sys.setenv(\"plotly_api_key\"=\"ILTpvNQjVCzCgH99TgYW\")\n\nSys.setenv(\"plotly_username\"=\"tentotheminus9\")\nSys.setenv(\"plotly_api_key\"=\"VU1BYmduL9acUMjVYt2W\")\n\nvalues = all_small$favorite_count[all_small$Sentiment == 'Positive']\nvalues = sqrt(values)*2\nvalues = as.data.frame(values)\nvalues = cbind(values, all_small$favorite_count[all_small$Sentiment == 'Positive'])\nvalues = cbind(values, all_small$Sentiment[all_small$Sentiment == 'Positive'])\nvalues = cbind(values, all_small$text[all_small$Sentiment == 'Positive'])\n#values = sqrt(all_small$favorite_count)*2\nwrite.csv(values, \"values.csv\")\n\n\n\np = plot_ly(all_small,\n            x = ~created_at, \n            y = ~Scaled_sentiment,\n            mode = \"markers\", \n            type = \"scatter\",\n            showlegend = T, \n            color = ~Sentiment,\n            #size = ~values,\n            #marker = list(size = sqrt(all_small$favorite_count)*2/10),\n            hoverinfo = \"text\", \n            text = paste(\"Tweet: \", \n                         all_small$text,\n                         \"</br>Estimated Sentiment: \",\n                         all_small$Sentiment,\n                         \"</br>No. Retweets: \",\n                         all_small$retweet_count,\n                         \"</br>No. Favourites: \",\n                         all_small$favorite_count,\n                         \"</br>Dow Jones Industrial Average: \", \n                         all_small$VALUE)) %>%\n    add_trace(x = all_small$created_at,\n              y = all_small$Scaled_djia,\n              opacity = 0.2,\n              name = 'Dow Jones Industrial Average',\n              #type = 'scatter',\n              mode = 'lines',\n              color = I('black'),\n              size = I(1),\n              hoverinfo = \"none\") %>%\n              #hoverinfo = \"text\",\n              #text = paste(\"</br>DJIA: \",\n               #             all$VALUE)) %>%\nlayout(title =\"Trump Cumulative Sentiment Over Time\", \n       # annotations = list(text = paste(\"Point size proportional to </br> the number of favourites\"),\n       #                    x = 2015,\n       #                    y = -2,\n       #                    showarrow = F,\n       #                    font = list(size = 12,\n       #                                color = 'black')),\n       # titlefont = t,\n       # plot_bgcolor='white',\n       xaxis = list(title = \"Date\"), \n       yaxis = list(title = \"Scaled Values (arb)\"))\n\n\napi_create(p)\n\n#plotly_POST(p)\n\np\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
    "created" : 1493726131895.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1781432578",
    "id" : "EC5DF6A",
    "lastKnownWriteTime" : 1493816181,
    "last_content_update" : 1493816181259,
    "path" : "C:/Users/rob.harrand/Dropbox/data.world/trump/trump/trump.R",
    "project_path" : "trump.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}